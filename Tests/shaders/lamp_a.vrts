#version 330 core
layout (location = 0) in vec3 a_pos;
layout (location = 1) in vec3 a_nor;
layout (location = 2) in vec2 a_uv;
out vec3 v_pos;
out vec3 v_nor;
out vec2 v_uv;

out vec3 frag_pos;
out vec3 light_position;

uniform float u_time;
uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;
uniform mat4 model_view_projection;
uniform mat3 mat_norm;

uniform vec3 light_pos;

void main(void) {
    gl_Position = model_view_projection * vec4(a_pos, 1.0);
    //gl_Position = model_view_projection * vec4(vec3(a_pos - noise(a_pos + u_time)), 1.0);
    v_pos = a_pos;
    v_nor = mat_norm * a_nor;
    v_uv = vec2(a_uv.x, -a_uv.y);
   
    frag_pos = vec3(view * model * vec4(a_pos, 1.0f));
    // transform the light position into view space
    light_position = vec3(view * vec4(light_pos, 1.0f));
}