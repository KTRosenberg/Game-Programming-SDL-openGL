#version 330 core
precision highp float;

in vec3 v_position;
in vec4 v_color;
in vec2 v_uv;
in vec3 v_position_cam;

uniform float u_time;
uniform vec2 u_resolution;
uniform sampler2D tex0;
uniform sampler2D tex1;

uniform float offset_layers;
uniform int   count_layers;

out vec4 color;

float sin_pos(float f) { return (1.0 + sin(f)) / 2.0; }

vec3 sin_pos_v3(vec3 v3)
{
   return vec3(
      sin_pos(v3.x),
      sin_pos(v3.y),
      sin_pos(v3.z)
   );
}

void main(void)
{
   vec4 c = vec4(0.0);

   float T = v_position_cam.x;
   float Y = float(int(v_uv.y * 10.0)) / 10.0;

   float off_x = v_uv.x + (T * Y);

   vec4 tex  = vec4(texture(tex0, vec2(mod(off_x, 0.5), v_uv.y + (-v_position_cam.y * v_uv.y))));

   c = tex;

   color = vec4(sqrt(c.rgb), c.a);
}
